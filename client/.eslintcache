[{"/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/index.js":"1","/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/components/App.js":"2","/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/reducers/index.js":"3","/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/components/Header.js":"4","/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/history.js":"5","/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/components/auth/Register.js":"6","/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/components/streams/StreamList.js":"7","/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/components/auth/Signin.js":"8","/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/components/streams/StreamStart.js":"9","/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/components/streams/StreamCreate.js":"10","/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/components/streams/StreamShow.js":"11","/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/components/auth/BusinessRegister.js":"12","/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/reducers/googleAuthReducer.js":"13","/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/reducers/messageReducer.js":"14","/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/reducers/authReducer.js":"15","/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/reducers/streamReducer.js":"16","/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/components/GoogleAuth.js":"17","/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/components/auth/UserAuth.js":"18","/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/actions/message.js":"19","/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/actions/stream.js":"20","/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/actions/auth.js":"21","/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/actions/types.js":"22","/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/apis/auth.js":"23","/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/apis/streams.js":"24","/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/actions/index.js":"25","/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/apis/header.js":"26","/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/components/streams/WebRTC.js":"27","/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/components/streams/WebRTCRoom.js":"28"},{"size":580,"mtime":1653000174216,"results":"29","hashOfConfig":"30"},{"size":1958,"mtime":1655769077772,"results":"31","hashOfConfig":"30"},{"size":445,"mtime":1655155786233,"results":"32","hashOfConfig":"30"},{"size":1441,"mtime":1655764697821,"results":"33","hashOfConfig":"30"},{"size":87,"mtime":1653000174216,"results":"34","hashOfConfig":"30"},{"size":7115,"mtime":1655246765394,"results":"35","hashOfConfig":"30"},{"size":2685,"mtime":1655155786232,"results":"36","hashOfConfig":"30"},{"size":3961,"mtime":1655155786231,"results":"37","hashOfConfig":"30"},{"size":1506,"mtime":1655762731610,"results":"38","hashOfConfig":"30"},{"size":4476,"mtime":1655155786232,"results":"39","hashOfConfig":"30"},{"size":1510,"mtime":1655155786232,"results":"40","hashOfConfig":"30"},{"size":7192,"mtime":1655155786231,"results":"41","hashOfConfig":"30"},{"size":422,"mtime":1655155786233,"results":"42","hashOfConfig":"30"},{"size":387,"mtime":1655155786233,"results":"43","hashOfConfig":"30"},{"size":1067,"mtime":1655155786233,"results":"44","hashOfConfig":"30"},{"size":778,"mtime":1655155786233,"results":"45","hashOfConfig":"30"},{"size":1714,"mtime":1655155786231,"results":"46","hashOfConfig":"30"},{"size":2275,"mtime":1655155786232,"results":"47","hashOfConfig":"30"},{"size":206,"mtime":1655155786229,"results":"48","hashOfConfig":"30"},{"size":1889,"mtime":1655155786229,"results":"49","hashOfConfig":"30"},{"size":2712,"mtime":1655155786229,"results":"50","hashOfConfig":"30"},{"size":585,"mtime":1655155786230,"results":"51","hashOfConfig":"30"},{"size":1307,"mtime":1655155786230,"results":"52","hashOfConfig":"30"},{"size":761,"mtime":1655155786230,"results":"53","hashOfConfig":"30"},{"size":1464,"mtime":1655155786229,"results":"54","hashOfConfig":"30"},{"size":169,"mtime":1655155786230,"results":"55","hashOfConfig":"30"},{"size":1470,"mtime":1657855136485,"results":"56","hashOfConfig":"30"},{"size":5000,"mtime":1657860656344,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},"ptqq77",{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"61"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"61"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"61"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"61"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"61"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"61"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"61"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"61"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"61"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"61"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"61"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/index.js",["127"],"import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport {createStore,applyMiddleware,compose} from 'redux'\nimport reduxThunk from 'redux-thunk'\n\nimport App from './components/App';\nimport reducers from './reducers'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__|| compose\nconst store = createStore(\n     reducers,\n     composeEnhancers(applyMiddleware(reduxThunk))\n     );\nReactDOM.render(\n    <Provider store={store} >\n         <App />\n    </Provider>,\n    document.querySelector('#root'))",["128","129"],"/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/components/App.js",["130","131"],"import React, { Component } from 'react';\nimport {Router, Route, Link, Switch } from 'react-router-dom';\nimport Header from './Header'\nimport StreamCreate from './streams/StreamCreate'\nimport StreamShow from './streams/StreamShow'\nimport StreamList from './streams/StreamList'\nimport StreamStart from './streams/StreamStart';\n// import StreamDelete from './streams/StreamDelete'\n// import StreamEdit from './streams/streamEdit'\nimport history from '../history'\nimport 'bootswatch/dist/darkly/bootstrap.min.css'\nimport Signin from './auth/Signin';\nimport Register from './auth/Register';\nimport BusinessRegister from './auth/BusinessRegister';\nimport WebRTC from './streams/WebRTC';\nimport WebRTCRoom from './streams/WebRTCRoom';\n\nconst App =() =>{\n    return (\n        <div className=\"ui cointainer\">\n            <Router history={history}>\n             <div>\n                <Header />\n                <Switch>\n                <Route path=\"/\" exact component={StreamList}></Route>\n                <Route path=\"/signin\" exact component={Signin}></Route>\n                <Route path=\"/register\" exact component={Register}></Route>\n                <Route path=\"/business/register\" exact component={BusinessRegister}></Route>\n                <Route path=\"/streams/new\" exact component={StreamCreate}></Route>\n                <Route path=\"/streams/start/:businessId\" exact component={StreamStart}></Route>\n                {/* <Route path=\"/streams/edit/:id\" exact component={StreamEdit}></Route>\n                <Route path=\"/streams/delete/:id\" exact component={StreamDelete}></Route> */}\n                <Route path=\"/streams/:id\" exact component={StreamShow}></Route>\n                {/* webrtc */}\n                <Route path=\"/webrtc\" exact component={WebRTC}></Route>\n                <Route path=\"/webrtc/:id\" eact component={WebRTCRoom}></Route>\n                </Switch>\n             </div>\n            </Router>\n        </div>\n    )\n}\nexport default App;","/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/reducers/index.js",[],"/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/components/Header.js",["132","133","134","135","136"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport GoogleAuth from './GoogleAuth';\nimport UserAuth from './auth/UserAuth';\n\n\nconst Header = () => {\n    return(\n        <nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n  <div class=\"container-fluid\">\n    <Link to={\"/\"} class=\"navbar-brand\" href=\"#\">Live</Link>\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarColor01\" aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div class=\"collapse navbar-collapse\" id=\"navbarColor01\">\n      <ul class=\"navbar-nav me-auto\">\n        <li class=\"nav-item\">\n          <Link to={\"/\"} class=\"nav-link active\" >Live Rooms\n            <span class=\"visually-hidden\">(current)</span>\n          </Link>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"#\">Posts</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"#\">Products</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"#\">User Profile</a>\n        </li>\n        {/* webrtc part */}\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"/webrtc/\">WebRTC function</a>\n        </li>\n      </ul>\n      {/* <GoogleAuth /> */}\n      <UserAuth/>\n    </div>\n  </div>\n</nav>\n    );\n}\nexport default Header;","/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/history.js",[],"/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/components/auth/Register.js",["137"],"import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport { connect } from \"react-redux\";\nimport { register } from \"../../actions/auth\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst email = (value) => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This is not a valid email.\n      </div>\n    );\n  }\n};\n\nconst vusername = (value) => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = (value) => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onChangeFirstName = this.onChangeFirstName.bind(this);\n    this.onChangeLastName = this.onChangeLastName.bind(this);\n    this.onChangeBirthday = this.onChangeBirthday.bind(this);\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      firstName:\"\",\n      lastName:\"\",\n      birthday:\"\",\n      successful: false,\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value,\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value,\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  onChangeFirstName(e) {\n    this.setState({\n      firstName: e.target.value,\n    });\n  }\n\n  onChangeLastName(e) {\n    this.setState({\n      lastName: e.target.value,\n    });\n  }\n\n  \n  onChangeBirthday(e) {\n    this.setState({\n      birthday: e.target.value,\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n\n    this.setState({\n      successful: false,\n    });\n\n    this.form.validateAll();\n\n    const { dispatch, history } = this.props;\n\n    if (this.checkBtn.context._errors.length === 0) {\n      this.props\n        .dispatch(\n          register(this.state.username, \n            this.state.email, \n            this.state.password,\n            this.state.firstName,\n            this.state.lastName,\n            this.state.birthday)\n        )\n        .then(() => {\n          this.setState({\n            successful: true,\n          });\n          history.push(\"/\");\n          window.location.reload();\n        })\n        .catch(() => {\n          this.setState({\n            successful: false,\n          });\n        });\n    }\n  }\n\n  render() {\n    const { message } = this.props;\n\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          {/* <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          /> */}\n\n          <Form\n            onSubmit={this.handleRegister}\n            ref={(c) => {\n              this.form = c;\n            }}\n          >\n            {!this.state.successful && (\n              <div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Username</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChangeUsername}\n                    validations={[required, vusername]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.onChangeEmail}\n                    validations={[required, email]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <Input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChangePassword}\n                    validations={[required, vpassword]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"firstName\">First Name</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"firstName\"\n                    value={this.state.firstName}\n                    onChange={this.onChangeFirstName}\n                    validations={[required]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"lastName\">Last Name</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"lastName\"\n                    value={this.state.lastName}\n                    onChange={this.onChangeLastName}\n                    validations={[required]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"birthday\">Birthday</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"birthday\"\n                    value={this.state.birthday}\n                    onChange={this.onChangeBirthday}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\n                </div>\n              </div>\n            )}\n            {message && (\n              <div className=\"form-group\">\n                <div className={ this.state.successful ? \"alert alert-success\" : \"alert alert-danger\" } role=\"alert\">\n                  {message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={(c) => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { isLoggedIn } = state.myAuth;\n  const { message } = state.message;\n  return {\n    isLoggedIn,\n    message\n  };\n}\n\nexport default connect(mapStateToProps)(Register);","/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/components/streams/StreamList.js",["138","139","140"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions/stream'\nimport {clearMessage } from '../../actions/message'\nimport history  from '../../history';\n\nclass StreamList extends React.Component{\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          createLive: false,\n          currentUser: undefined,\n        };\n    \n      }\n\n\n\n    componentDidMount(){\n        const user = this.props.user;\n    \n        if (user) {\n          this.setState({\n            currentUser: user,\n            createLive: user.roles.includes(\"ROLE_BUSINESS\"),\n          });\n        }\n        this.props.fetchStreams()\n    }\n\n\n    // renderAdmin(stream) {\n    //     if(stream.userId === this.props.currentUserId) {\n    //         return (\n    //             <div className=\"right floated content\">\n    //                 <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">Edit</Link>\n    //                 <Link to = {`/streams/delete/${stream.id}`}className=\"ui button negative\">\n    //                     Delete\n    //                 </Link>\n    //             </div>\n    //         )\n    //     }\n    // }\n\n    renderList() {\n        return this.props.streams.map(stream => {\n            return (\n                <div className=\"item\" key={stream.id}>\n                    {/* {this.renderAdmin(stream)} */}\n                    <i className=\"large middle aligned icon camera\" />\n                    <div className=\"content\">\n                        <Link to={`/streams/${stream.id}`} className=\"header\">\n                        {stream.title}\n                        </Link>\n                        <div className=\"description\">{stream.description}</div>\n                    </div>\n                </div>\n            )\n        })\n    }\n    renderCreate() {\n        if(this.props.isLoggedIn && this.state.createLive){\n            return(\n                <div style={{ textAlign: 'right'}}>\n                    <Link to=\"/streams/new\" className=\"ui button primary\">\n                    Create stream\n                    </Link>\n                </div>\n            )\n        }\n    }\n    render() {\n        return (\n        <div>\n            <h2>Live Rooms</h2>\n            <div className=\"ui celled list\">{this.renderList()}</div>\n            {this.renderCreate()}\n        </div>\n        )\n    }\n}\nconst mapStateToProps=(state) =>{\n    return {\n        streams: Object.values(state.streams),\n        user: state.myAuth.user,\n        isLoggedIn: state.myAuth.isLoggedIn\n    }\n}\nexport default connect(mapStateToProps, {fetchStreams}) (StreamList);","/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/components/auth/Signin.js",[],"/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/components/streams/StreamStart.js",["141","142","143","144"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreamsByBusinessId, fetchStreams} from \"../../actions/stream\"\nimport history from '../../history';\nimport { Link } from 'react-router-dom';\n\n\n\nclass StreamStart extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          currentStream: null,\n          currentUser: undefined,\n          token: this.props.location.state.token\n        };\n    \n      }\n\n    componentDidMount(){\n        this.props.fetchStreamsByBusinessId(this.props.match.params.businessId)\n        \n    }\n\n    handleCurrentStream() {\n         return this.props.streams.map(stream => {\n            if(stream.token === this.state.token){\n               return(<Link to={`/streams/${stream.id}`} className=\"header\">\n                    start live\n               </Link>)\n            }\n        })\n    }\n\n\n    render() {\n        console.log(this.state.currentStream)\n        return(\n          <div>\n              <h5>server</h5>\n              <p>rtmp://localhost/live</p>\n              <h5>your token is</h5>\n              <p>{this.props.location.state.token}</p>\n              {this.handleCurrentStream()}\n          </div>\n        )\n    }\n}\nconst mapStateToProps= (state) => {\n    return {\n        streams: Object.values(state.streams),\n        user: state.myAuth.user,\n        isLoggedIn: state.myAuth.isLoggedIn\n    }\n}\n\nexport default connect(mapStateToProps,{fetchStreamsByBusinessId})(StreamStart);","/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/components/streams/StreamCreate.js",["145","146","147"],"import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { connect } from \"react-redux\";\nimport { createStream } from \"../../actions/stream\";\nimport { fetchStream } from '../../actions/stream';\nimport bcrypt from 'bcryptjs'\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\n\nclass StreamCreate extends Component {\n  constructor(props) {\n    super(props);\n    this.handleCreateStream = this.handleCreateStream.bind(this);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    \n    this.state = {\n      businessId:this.props.user.businessId,\n      title : '',\n      description: '',\n      token:'12345',\n      successful:false\n    };\n  }\n\n\n\n  onChangeTitle(e) {\n  \n    this.setState({\n      title: e.target.value,\n    });\n    const token = Math.floor(Math.random()*10000)+Math.random().toString(36).slice(2, 7);\n    this.setState({\n      token: token,\n    })\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value,\n    });\n  }\n\n\n  handleCreateStream(e) {\n    e.preventDefault();\n\n    this.setState({\n      successful: false,\n    });\n  \n\n    this.form.validateAll();\n\n    const { dispatch, history } = this.props;\n\n\n    var stream = {\n      title: this.state.title,\n      description: this.state.description,\n      token:this.state.token\n    };\n\n    if (this.checkBtn.context._errors.length === 0) {\n      this.props\n        .dispatch(\n          createStream(this.state.businessId,stream)\n        )\n        .then(() => {\n          this.setState({\n            successful: true,\n          });\n          history.push({pathname:`/streams/start/${this.state.businessId}`,state:{token:this.state.token}});\n          window.location.reload();\n        })\n        .catch(() => {\n          this.setState({\n            successful: false,\n          });\n        });\n    }\n  }\n\n  render() {\n    const { message } = this.props;\n\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          {/* <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          /> */}\n          <Form\n            onSubmit={this.handleCreateStream}\n            ref={(c) => {\n              this.form = c;\n            }}\n          >\n            {!this.state.successful && (\n              <div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"title\">Title</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"title\"\n                    value={this.state.title}\n                    onChange={this.onChangeTitle}\n                    validations={[required]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"description\">Description</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"firstName\"\n                    value={this.state.description}\n                    onChange={this.onChangeDescription}\n                    validations={[required]}\n                  />\n                </div>\n\n               \n\n                <div className=\"form-group\">\n                  <button className=\"btn btn-primary btn-block\">Create</button>\n                </div>\n              </div>\n            )}\n\n            {message && (\n              <div className=\"form-group\">\n                <div className={ this.state.successful ? \"alert alert-success\" : \"alert alert-danger\" } role=\"alert\">\n                  {message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={(c) => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { isLoggedIn } = state.myAuth;\n  const {user} = state.myAuth;\n  const { message } = state.message;\n  return {\n    isLoggedIn,\n    user,\n    message,\n  };\n}\n\nexport default connect(mapStateToProps)(StreamCreate);","/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/components/streams/StreamShow.js",["148"],"import React, { Component } from 'react';\nimport flv from 'flv.js';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions/stream';\n\nclass StreamShow extends React.Component{\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef()\n\n    }\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id)\n        this.buildPlayer();\n\n    }\n    componentDidUpdate() {\n        this.buildPlayer();\n    }\n    componentWillUnmount() {\n        this.player.destroy();\n    }\n    buildPlayer() {\n        if(this.player || !this.props.stream) {\n            return;\n        }\n        this.player=flv.createPlayer({\n            type: 'flv',\n            url: `http://localhost:8000/live/${this.props.stream.token}.flv`\n        })\n        this.player.attachMediaElement(this.videoRef.current);\n        this.player.load()\n\n\n    }\n\n    renderInfo(){\n        \n    }\n    render() {\n        if(!this.props.stream){\n            return <div>Loading</div>\n        }\n        return(\n            <div>\n                <video ref={this.videoRef} style={{ width:'50%'}} controls={true}/>\n                <h1>{this.props.stream.title}</h1>\n                <h5>{this.props.stream.description}</h5>\n            </div>\n        )\n    }\n}\nconst mapStateToProps= (state, ownProps) => {\n    return { \n        user: state.myAuth.user,\n        stream: state.streams[ownProps.match.params.id]\n    }\n}\nexport default connect(mapStateToProps, {fetchStream})(StreamShow);","/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/components/auth/BusinessRegister.js",["149"],"import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport { connect } from \"react-redux\";\nimport { businessRegister } from \"../../actions/auth\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst email = (value) => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This is not a valid email.\n      </div>\n    );\n  }\n};\n\nconst vusername = (value) => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = (value) => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\nclass BusinessRegister extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onChangeBusinessName = this.onChangeBusinessName.bind(this);\n    this.onChangeBusinessWebsite = this.onChangeBusinessWebsite.bind(this);\n    this.onChangePhoneNumber = this.onChangePhoneNumber.bind(this);\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      businessName:\"\",\n      businessWebsite:\"\",\n      phoneNumber:\"\",\n      successful: false,\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value,\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value,\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n\n  \n  onChangeBusinessName(e) {\n    this.setState({\n      businessName: e.target.value,\n    });\n  }\n\n  onChangeBusinessWebsite(e) {\n    this.setState({\n      businessWebsite: e.target.value,\n    });\n  }\n\n\n  onChangePhoneNumber(e) {\n    this.setState({\n      phoneNumber: e.target.value,\n    });\n  }\n\n\n  handleRegister(e) {\n    e.preventDefault();\n\n    this.setState({\n      successful: false,\n    });\n\n    this.form.validateAll();\n\n    const { dispatch, history } = this.props;\n\n    if (this.checkBtn.context._errors.length === 0) {\n      this.props\n        .dispatch(\n          businessRegister(this.state.username, \n            this.state.email, \n            this.state.password,\n            this.state.businessName,\n            this.state.businessWebsite,\n            this.state.phoneNumber)\n        )\n        .then(() => {\n          this.setState({\n            successful: true,\n          });\n          history.push(\"/\");\n          window.location.reload();\n        })\n        .catch(() => {\n          this.setState({\n            successful: false,\n          });\n        });\n    }\n  }\n\n  render() {\n    const { message } = this.props;\n\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          {/* <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          /> */}\n\n          <Form\n            onSubmit={this.handleRegister}\n            ref={(c) => {\n              this.form = c;\n            }}\n          >\n            {!this.state.successful && (\n              <div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Username</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChangeUsername}\n                    validations={[required, vusername]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.onChangeEmail}\n                    validations={[required, email]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <Input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChangePassword}\n                    validations={[required, vpassword]}\n                  />\n                </div>\n\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"businessName\">Company </label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"businessName\"\n                    value={this.state.birthday}\n                    onChange={this.onChangeBusinessName}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"businessWebsite\">businessWebSite </label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"businessWebsite\"\n                    value={this.state.businessWebSite}\n                    onChange={this.onChangeBusinessWebsite}\n                  />\n                </div>\n\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"phoneNumber\">Contact </label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"phoneNumber\"\n                    value={this.state.phoneNumber}\n                    onChange={this.onChangePhoneNumber}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\n                </div>\n              </div>\n            )}\n\n            {message && (\n              <div className=\"form-group\">\n                <div className={ this.state.successful ? \"alert alert-success\" : \"alert alert-danger\" } role=\"alert\">\n                  {message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={(c) => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { isLoggedIn } = state.auth;\n  const { message } = state.message;\n  return {\n    isLoggedIn,\n    message\n  };\n}\n\nexport default connect(mapStateToProps)(BusinessRegister);","/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/reducers/googleAuthReducer.js",["150"],"import {SIGN_IN, SIGN_OUT} from '../actions/types'\nconst INITIAL_STATE={\n    isSignedIn:null,\n    userId: null\n}\nexport default (state = INITIAL_STATE, action) =>{\n    switch(action.type) {\n        case SIGN_IN:\n            return{ ...state, isSignedIn:true, userId: action.payload};\n        case SIGN_OUT:\n            return { ...state, isSignedIn:false, userId: null};\n        default:\n            return state;\n    }\n\n}","/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/reducers/messageReducer.js",[],"/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/reducers/authReducer.js",[],"/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/reducers/streamReducer.js",[],"/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/components/GoogleAuth.js",["151"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {signIn, signOut} from '../actions'\n\nclass GoogleAuth extends React.Component{\n    componentDidMount() {\n        window.gapi.load('client:auth2', () => {\n            window.gapi.client.init({\n                clientId:'602206568945-h2r1ehr8strrto5ngaug85053hdnr365.apps.googleusercontent.com',\n                scope:'email'\n            }).then(()=> {\n                this.auth=window.gapi.auth2.getAuthInstance();\n                this.onAuthChange(this.auth.isSignedIn.get())\n                this.auth.isSignedIn.listen(this.onAuthChange)\n            })\n        });\n    }\n    onAuthChange= (isSignedIn) => {\n        if(isSignedIn) {\n            this.props.signIn(this.auth.currentUser.get().getId())\n        }\n        else{\n            this.props.signOut()\n        }\n    }\n    onSignInClick= () =>{\n        this.auth.signIn()\n    }\n    onSignOutClick=() =>{\n        this.auth.signOut()\n    }\n    renderAuthButton() {\n        if(this.props.isSignedIn === null){\n            return null;\n        }\n        else if(this.props.isSignedIn){\n            return(\n                <button onClick={this.onSignOutClick}className=\"ui red google button\">\n                    Sign Out\n                </button>\n            )\n        }\n        else{\n            return(\n                <button onClick={this.onSignInClick}className=\"ui red google button\">Google Sign In</button>\n            )\n        }\n    }\n    render() {\n        return <div>{this.renderAuthButton()}</div>;\n    }\n}\nconst mapStateToProps=(state) =>{\n    return {isSignedIn: state.auth.isSignedIn }\n\n}\nexport default connect(mapStateToProps,{signIn, signOut })(GoogleAuth);","/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/components/auth/UserAuth.js",[],"/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/actions/message.js",[],"/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/actions/stream.js",[],"/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/actions/auth.js",[],"/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/actions/types.js",[],"/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/apis/auth.js",[],"/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/apis/streams.js",[],"/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/actions/index.js",["152","153","154","155","156","157","158"],"import history from '../history'\nimport {\n    SIGN_IN, \n    SIGN_OUT, \n    CREATE_STREAM,\n    FETCH_STREAM,\n    FETCH_STREAMS,\n    EDIT_STREAM,\n    DELETE_STREAM\n\n} from './types'\nimport streams from '../apis/streams'\n\nexport const signIn = (userId) =>{\n    return{\n        type:SIGN_IN,\n        payload:userId\n    }\n}\nexport const signOut = () =>{\n    return {\n        type:SIGN_OUT\n    }\n}\n// export const createStream = (formValues) => async (dispatch,getState) =>{\n//     const {userId } = getState().auth\n//     const response = await streams.post('/streams', {...formValues, userId})\n//     dispatch({ type: CREATE_STREAM, payload: response.data})\n//     history.push('/')\n// }\n// export const fetchStreams =() => async dispatch =>{\n//     const response = await streams.get('/streams');\n//     dispatch({ type:FETCH_STREAMS, payload: response.data })\n// }\n// export const fetchStream= (id) => async dispatch => {\n//     const response = await streams.get(`/streams/${id}`)\n//     dispatch({ type:FETCH_STREAM, payload: response.data})\n// }\n// export const editStream = (id, formValues) => async dispatch => {\n//     const response = await streams.patch(`/streams/${id}`, formValues)\n//     dispatch({ type:EDIT_STREAM, payload:response.data})\n//     history.push('/')\n// }\n// export const deleteStream = (id) => async dispatch=>{\n//     await streams.delete(`/streams/${id}`)\n//     dispatch({ type:DELETE_STREAM, payload: id})\n//     history.push('/')\n// }","/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/apis/header.js",[],"/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/components/streams/WebRTC.js",["159","160","161","162","163","164","165","166"],"/Users/scenery/Codebase/IPG-Codebase/live/Live_combine/client/src/components/streams/WebRTCRoom.js",["167","168","169","170","171","172","173","174","175","176","177"],{"ruleId":"178","severity":1,"message":"179","line":1,"column":17,"nodeType":"180","messageId":"181","endLine":1,"endColumn":26},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"178","severity":1,"message":"179","line":1,"column":17,"nodeType":"180","messageId":"181","endLine":1,"endColumn":26},{"ruleId":"178","severity":1,"message":"186","line":2,"column":24,"nodeType":"180","messageId":"181","endLine":2,"endColumn":28},{"ruleId":"178","severity":1,"message":"179","line":1,"column":17,"nodeType":"180","messageId":"181","endLine":1,"endColumn":26},{"ruleId":"178","severity":1,"message":"187","line":3,"column":8,"nodeType":"180","messageId":"181","endLine":3,"endColumn":18},{"ruleId":"188","severity":1,"message":"189","line":24,"column":11,"nodeType":"190","endLine":24,"endColumn":40},{"ruleId":"188","severity":1,"message":"189","line":27,"column":11,"nodeType":"190","endLine":27,"endColumn":40},{"ruleId":"188","severity":1,"message":"189","line":30,"column":11,"nodeType":"190","endLine":30,"endColumn":40},{"ruleId":"178","severity":1,"message":"191","line":118,"column":13,"nodeType":"180","messageId":"181","endLine":118,"endColumn":21},{"ruleId":"178","severity":1,"message":"179","line":1,"column":17,"nodeType":"180","messageId":"181","endLine":1,"endColumn":26},{"ruleId":"178","severity":1,"message":"192","line":5,"column":9,"nodeType":"180","messageId":"181","endLine":5,"endColumn":21},{"ruleId":"178","severity":1,"message":"193","line":6,"column":8,"nodeType":"180","messageId":"181","endLine":6,"endColumn":15},{"ruleId":"178","severity":1,"message":"179","line":1,"column":17,"nodeType":"180","messageId":"181","endLine":1,"endColumn":26},{"ruleId":"178","severity":1,"message":"194","line":3,"column":36,"nodeType":"180","messageId":"181","endLine":3,"endColumn":48},{"ruleId":"178","severity":1,"message":"193","line":4,"column":8,"nodeType":"180","messageId":"181","endLine":4,"endColumn":15},{"ruleId":"195","severity":1,"message":"196","line":27,"column":47,"nodeType":"197","messageId":"198","endLine":27,"endColumn":49},{"ruleId":"178","severity":1,"message":"199","line":7,"column":10,"nodeType":"180","messageId":"181","endLine":7,"endColumn":21},{"ruleId":"178","severity":1,"message":"200","line":8,"column":8,"nodeType":"180","messageId":"181","endLine":8,"endColumn":14},{"ruleId":"178","severity":1,"message":"191","line":67,"column":13,"nodeType":"180","messageId":"181","endLine":67,"endColumn":21},{"ruleId":"178","severity":1,"message":"179","line":1,"column":17,"nodeType":"180","messageId":"181","endLine":1,"endColumn":26},{"ruleId":"178","severity":1,"message":"191","line":121,"column":13,"nodeType":"180","messageId":"181","endLine":121,"endColumn":21},{"ruleId":"201","severity":1,"message":"202","line":6,"column":1,"nodeType":"203","endLine":16,"endColumn":2},{"ruleId":"178","severity":1,"message":"179","line":1,"column":17,"nodeType":"180","messageId":"181","endLine":1,"endColumn":26},{"ruleId":"178","severity":1,"message":"193","line":1,"column":8,"nodeType":"180","messageId":"181","endLine":1,"endColumn":15},{"ruleId":"178","severity":1,"message":"204","line":5,"column":5,"nodeType":"180","messageId":"181","endLine":5,"endColumn":18},{"ruleId":"178","severity":1,"message":"205","line":6,"column":5,"nodeType":"180","messageId":"181","endLine":6,"endColumn":17},{"ruleId":"178","severity":1,"message":"206","line":7,"column":5,"nodeType":"180","messageId":"181","endLine":7,"endColumn":18},{"ruleId":"178","severity":1,"message":"207","line":8,"column":5,"nodeType":"180","messageId":"181","endLine":8,"endColumn":16},{"ruleId":"178","severity":1,"message":"208","line":9,"column":5,"nodeType":"180","messageId":"181","endLine":9,"endColumn":18},{"ruleId":"178","severity":1,"message":"209","line":12,"column":8,"nodeType":"180","messageId":"181","endLine":12,"endColumn":15},{"ruleId":"178","severity":1,"message":"210","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":12},{"ruleId":"178","severity":1,"message":"211","line":3,"column":8,"nodeType":"180","messageId":"181","endLine":3,"endColumn":13},{"ruleId":"178","severity":1,"message":"212","line":4,"column":8,"nodeType":"180","messageId":"181","endLine":4,"endColumn":19},{"ruleId":"178","severity":1,"message":"213","line":6,"column":10,"nodeType":"180","messageId":"181","endLine":6,"endColumn":22},{"ruleId":"178","severity":1,"message":"199","line":7,"column":10,"nodeType":"180","messageId":"181","endLine":7,"endColumn":21},{"ruleId":"178","severity":1,"message":"200","line":8,"column":8,"nodeType":"180","messageId":"181","endLine":8,"endColumn":14},{"ruleId":"178","severity":1,"message":"214","line":15,"column":7,"nodeType":"180","messageId":"181","endLine":15,"endColumn":9},{"ruleId":"178","severity":1,"message":"215","line":18,"column":7,"nodeType":"180","messageId":"181","endLine":18,"endColumn":15},{"ruleId":"178","severity":1,"message":"210","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":12},{"ruleId":"178","severity":1,"message":"211","line":3,"column":8,"nodeType":"180","messageId":"181","endLine":3,"endColumn":13},{"ruleId":"178","severity":1,"message":"212","line":4,"column":8,"nodeType":"180","messageId":"181","endLine":4,"endColumn":19},{"ruleId":"178","severity":1,"message":"213","line":6,"column":10,"nodeType":"180","messageId":"181","endLine":6,"endColumn":22},{"ruleId":"178","severity":1,"message":"199","line":7,"column":10,"nodeType":"180","messageId":"181","endLine":7,"endColumn":21},{"ruleId":"178","severity":1,"message":"216","line":8,"column":10,"nodeType":"180","messageId":"181","endLine":8,"endColumn":29},{"ruleId":"178","severity":1,"message":"200","line":9,"column":8,"nodeType":"180","messageId":"181","endLine":9,"endColumn":14},{"ruleId":"178","severity":1,"message":"217","line":12,"column":10,"nodeType":"180","messageId":"181","endLine":12,"endColumn":13},{"ruleId":"178","severity":1,"message":"218","line":12,"column":15,"nodeType":"180","messageId":"181","endLine":12,"endColumn":25},{"ruleId":"178","severity":1,"message":"219","line":14,"column":13,"nodeType":"180","messageId":"181","endLine":14,"endColumn":19},{"ruleId":"178","severity":1,"message":"215","line":18,"column":7,"nodeType":"180","messageId":"181","endLine":18,"endColumn":15},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","no-native-reassign",["220"],"no-negated-in-lhs",["221"],"'Link' is defined but never used.","'GoogleAuth' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'dispatch' is assigned a value but never used.","'clearMessage' is defined but never used.","'history' is defined but never used.","'fetchStreams' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'fetchStream' is defined but never used.","'bcrypt' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'CREATE_STREAM' is defined but never used.","'FETCH_STREAM' is defined but never used.","'FETCH_STREAMS' is defined but never used.","'EDIT_STREAM' is defined but never used.","'DELETE_STREAM' is defined but never used.","'streams' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'CheckButton' is defined but never used.","'createStream' is defined but never used.","'io' is assigned a value but never used.","'required' is assigned a value but never used.","'RouteComponentProps' is defined but never used.","'add' is defined but never used.","'isFunction' is defined but never used.","'uuidV4' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]