[{"C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\components\\streams\\streamEdit.js":"1","C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\components\\GoogleAuth.js":"2","C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\components\\streams\\StreamDelete.js":"3","C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\components\\Modal.js":"4","C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\reducers\\googleAuthReducer.js":"5","C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\components\\streams\\StreamShow.js":"6","C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\components\\streams\\StreamForm.js":"7","C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\history.js":"8","C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\apis\\streams.js":"9","C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\reducers\\streamReducer.js":"10","C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\actions\\types.js":"11","C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\reducers\\authReducer.js":"12","C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\components\\auth\\Signin.js":"13","C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\components\\streams\\StreamCreate.js":"14","C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\apis\\auth.js":"15","C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\reducers\\messageReducer.js":"16","C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\reducers\\index.js":"17","C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\actions\\auth.js":"18","C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\actions\\message.js":"19","C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\components\\Header.js":"20","C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\components\\auth\\UserAuth.js":"21","C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\components\\streams\\StreamList.js":"22","C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\components\\auth\\Register.js":"23","C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\components\\auth\\BusinessRegister.js":"24","C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\actions\\stream.js":"25","C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\components\\App.js":"26","C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\components\\streams\\StreamStart.js":"27","C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\index.js":"28","C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\components\\streams\\StreamSearch.js":"29","C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\components\\streams\\StreamTag.js":"30"},{"size":979,"mtime":1653005974670,"results":"31","hashOfConfig":"32"},{"size":1770,"mtime":1655306401653,"results":"33","hashOfConfig":"32"},{"size":1439,"mtime":1653005974662,"results":"34","hashOfConfig":"32"},{"size":710,"mtime":1652975907439,"results":"35","hashOfConfig":"32"},{"size":437,"mtime":1655306401680,"results":"36","hashOfConfig":"32"},{"size":1569,"mtime":1655306401674,"results":"37","hashOfConfig":"32"},{"size":1625,"mtime":1652975907443,"results":"38","hashOfConfig":"32"},{"size":88,"mtime":1653022202553,"results":"39","hashOfConfig":"32"},{"size":992,"mtime":1655928932544,"results":"40","hashOfConfig":"32"},{"size":804,"mtime":1655306401685,"results":"41","hashOfConfig":"32"},{"size":600,"mtime":1653006936837,"results":"42","hashOfConfig":"32"},{"size":1119,"mtime":1655306401679,"results":"43","hashOfConfig":"32"},{"size":4124,"mtime":1653666341012,"results":"44","hashOfConfig":"32"},{"size":5693,"mtime":1655318909156,"results":"45","hashOfConfig":"32"},{"size":1418,"mtime":1653085585911,"results":"46","hashOfConfig":"32"},{"size":407,"mtime":1655306401683,"results":"47","hashOfConfig":"32"},{"size":458,"mtime":1655306401682,"results":"48","hashOfConfig":"32"},{"size":2834,"mtime":1655306401636,"results":"49","hashOfConfig":"32"},{"size":215,"mtime":1655306401640,"results":"50","hashOfConfig":"32"},{"size":1342,"mtime":1654099583744,"results":"51","hashOfConfig":"32"},{"size":2372,"mtime":1653666054697,"results":"52","hashOfConfig":"32"},{"size":4003,"mtime":1655928829860,"results":"53","hashOfConfig":"32"},{"size":7386,"mtime":1653506750337,"results":"54","hashOfConfig":"32"},{"size":7465,"mtime":1654641290123,"results":"55","hashOfConfig":"32"},{"size":2341,"mtime":1655927340537,"results":"56","hashOfConfig":"32"},{"size":2048,"mtime":1655928983680,"results":"57","hashOfConfig":"32"},{"size":1515,"mtime":1655790888925,"results":"58","hashOfConfig":"32"},{"size":598,"mtime":1653005974670,"results":"59","hashOfConfig":"32"},{"size":3092,"mtime":1655792714089,"results":"60","hashOfConfig":"32"},{"size":3086,"mtime":1655928669753,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},"15lgxpe",{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\components\\streams\\streamEdit.js",["136"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchStream, editStream } from '../../actions'\r\nimport StreamForm from './StreamForm'\r\nimport _ from'lodash';\r\n\r\nclass StreamEdit extends React.Component{\r\n    componentDidMount() {\r\n        this.props.fetchStream(this.props.match.params.id);\r\n    }\r\n    onSubmit= (formValues) => {\r\n        this.props.editStream(this.props.match.params.id, formValues)\r\n    }\r\n    render() {\r\n      if(!this.props.stream){\r\n          return <div>Loading</div>\r\n      }\r\n        return(\r\n            <div>\r\n                <h3>Edit Stream</h3>\r\n                <StreamForm initialValues={_.pick(this.props.stream, 'title', 'description')}onSubmit={this.onSubmit} />\r\n            </div>\r\n        ) \r\n\r\n    }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {stream: state.streams[ownProps.match.params.id] }\r\n}\r\nexport default connect(mapStateToProps,{fetchStream, editStream})(StreamEdit);",["137","138"],"C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\components\\GoogleAuth.js",["139"],"C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\components\\streams\\StreamDelete.js",["140"],"C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\components\\Modal.js",["141"],"C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\reducers\\googleAuthReducer.js",["142"],"import {SIGN_IN, SIGN_OUT} from '../actions/types'\r\nconst INITIAL_STATE={\r\n    isSignedIn:null,\r\n    userId: null\r\n}\r\nexport default (state = INITIAL_STATE, action) =>{\r\n    switch(action.type) {\r\n        case SIGN_IN:\r\n            return{ ...state, isSignedIn:true, userId: action.payload};\r\n        case SIGN_OUT:\r\n            return { ...state, isSignedIn:false, userId: null};\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\components\\streams\\StreamShow.js",["143"],"C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\components\\streams\\StreamForm.js",["144","145"],"C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\history.js",[],["146","147"],"C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\apis\\streams.js",[],"C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\reducers\\streamReducer.js",[],"C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\actions\\types.js",[],["148","149"],"C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\reducers\\authReducer.js",[],"C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\components\\auth\\Signin.js",[],["150","151"],"C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\components\\streams\\StreamCreate.js",["152","153","154"],"import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStream } from \"../../actions/stream\";\r\nimport { fetchStream } from '../../actions/stream';\r\nimport bcrypt from 'bcryptjs'\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n\r\nclass StreamCreate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleCreateStream = this.handleCreateStream.bind(this);\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.onChangeTag = this.onChangeTag.bind(this);\r\n    \r\n    this.state = {\r\n      businessId:this.props.user.businessId,\r\n      title : '',\r\n      description: '',\r\n      token:'12345',\r\n      tag:[],\r\n      checked:false,\r\n      successful:false\r\n    };\r\n  }\r\n\r\n\r\n\r\n  onChangeTitle(e) {\r\n  \r\n    this.setState({\r\n      title: e.target.value,\r\n    });\r\n    const token = Math.floor(Math.random()*10000)+Math.random().toString(36).slice(2, 7);\r\n    this.setState({\r\n      token: token,\r\n    })\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    this.setState({\r\n      description: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeTag(e) {\r\n   this.setState({\r\n    tag: [...this.state.tag,e.target.value]\r\n   })\r\n   \r\n   console.log(this.state.tag)\r\n  }\r\n\r\n\r\n  handleCreateStream(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      successful: false,\r\n    });\r\n  \r\n\r\n    this.form.validateAll();\r\n\r\n    const { dispatch, history } = this.props;\r\n\r\n\r\n    var stream = {\r\n      title: this.state.title,\r\n      description: this.state.description,\r\n      token:this.state.token,\r\n      tag:this.state.tag\r\n    };\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      this.props\r\n        .dispatch(\r\n          createStream(this.state.businessId,stream)\r\n        )\r\n        .then(() => {\r\n          this.setState({\r\n            successful: true,\r\n          });\r\n          history.push({pathname:`/streams/start/${this.state.businessId}`,state:{token:this.state.token}});\r\n          window.location.reload();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            successful: false,\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { message } = this.props;\r\n\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          {/* <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          /> */}\r\n          <Form\r\n            onSubmit={this.handleCreateStream}\r\n            ref={(c) => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"title\">Title</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"title\"\r\n                    value={this.state.title}\r\n                    onChange={this.onChangeTitle}\r\n                    validations={[required]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"description\">Description</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"firstName\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChangeDescription}\r\n                    validations={[required]}\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <input id=\"box1\" onChange={this.onChangeTag} type=\"checkbox\" value=\"cloth\"/>\r\n                  <label htmlFor=\"#box1\">cloth</label>\r\n                </div>\r\n                <div>\r\n                  <input id=\"box2\" onChange={this.onChangeTag} type=\"checkbox\" value=\"food\"/>\r\n                 <label htmlFor=\"#box2\">food</label>\r\n                </div>\r\n                <div>\r\n                  <input id=\"box3\" onChange={this.onChangeTag} type=\"checkbox\" value=\"makeup\"/>\r\n                 <label htmlFor=\"#box3\">makeup</label>\r\n                </div>\r\n                <div>\r\n                   <input id=\"box4\" onChange={this.onChangeTag} type=\"checkbox\" value=\"skincare\"/>\r\n                   <label htmlFor=\"#box4\">skincare</label>\r\n                </div>\r\n\r\n\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-primary btn-block\">Create</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {message && (\r\n              <div className=\"form-group\">\r\n                <div className={ this.state.successful ? \"alert alert-success\" : \"alert alert-danger\" } role=\"alert\">\r\n                  {message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={(c) => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn } = state.myAuth;\r\n  const {user} = state.myAuth;\r\n  const { message } = state.message;\r\n  return {\r\n    isLoggedIn,\r\n    user,\r\n    message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(StreamCreate);",["155","156"],"C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\apis\\auth.js",[],"C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\reducers\\messageReducer.js",[],"C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\reducers\\index.js",[],["157","158"],"C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\actions\\auth.js",[],"C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\actions\\message.js",[],"C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\components\\Header.js",["159","160","161","162","163"],"C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\components\\auth\\UserAuth.js",[],"C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\components\\streams\\StreamList.js",["164","165"],"C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\components\\auth\\Register.js",["166"],"import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { register } from \"../../actions/auth\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst email = (value) => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = (value) => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = (value) => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.onChangeFirstName = this.onChangeFirstName.bind(this);\r\n    this.onChangeLastName = this.onChangeLastName.bind(this);\r\n    this.onChangeBirthday = this.onChangeBirthday.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      firstName:\"\",\r\n      lastName:\"\",\r\n      birthday:\"\",\r\n      successful: false,\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeFirstName(e) {\r\n    this.setState({\r\n      firstName: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeLastName(e) {\r\n    this.setState({\r\n      lastName: e.target.value,\r\n    });\r\n  }\r\n\r\n  \r\n  onChangeBirthday(e) {\r\n    this.setState({\r\n      birthday: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      successful: false,\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    const { dispatch, history } = this.props;\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      this.props\r\n        .dispatch(\r\n          register(this.state.username, \r\n            this.state.email, \r\n            this.state.password,\r\n            this.state.firstName,\r\n            this.state.lastName,\r\n            this.state.birthday)\r\n        )\r\n        .then(() => {\r\n          this.setState({\r\n            successful: true,\r\n          });\r\n          history.push(\"/\");\r\n          window.location.reload();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            successful: false,\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { message } = this.props;\r\n\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          {/* <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          /> */}\r\n\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={(c) => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Username</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChangeUsername}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    validations={[required, vpassword]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"firstName\">First Name</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"firstName\"\r\n                    value={this.state.firstName}\r\n                    onChange={this.onChangeFirstName}\r\n                    validations={[required]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"lastName\">Last Name</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"lastName\"\r\n                    value={this.state.lastName}\r\n                    onChange={this.onChangeLastName}\r\n                    validations={[required]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"birthday\">Birthday</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"birthday\"\r\n                    value={this.state.birthday}\r\n                    onChange={this.onChangeBirthday}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {message && (\r\n              <div className=\"form-group\">\r\n                <div className={ this.state.successful ? \"alert alert-success\" : \"alert alert-danger\" } role=\"alert\">\r\n                  {message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={(c) => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn } = state.myAuth;\r\n  const { message } = state.message;\r\n  return {\r\n    isLoggedIn,\r\n    message\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Register);",["167","168"],"C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\components\\auth\\BusinessRegister.js",["169"],"import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { businessRegister } from \"../../actions/auth\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst email = (value) => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = (value) => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = (value) => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nclass BusinessRegister extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.onChangeBusinessName = this.onChangeBusinessName.bind(this);\r\n    this.onChangeBusinessWebsite = this.onChangeBusinessWebsite.bind(this);\r\n    this.onChangePhoneNumber = this.onChangePhoneNumber.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      businessName:\"\",\r\n      businessWebsite:\"\",\r\n      phoneNumber:\"\",\r\n      successful: false,\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n\r\n  \r\n  onChangeBusinessName(e) {\r\n    this.setState({\r\n      businessName: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeBusinessWebsite(e) {\r\n    this.setState({\r\n      businessWebsite: e.target.value,\r\n    });\r\n  }\r\n\r\n\r\n  onChangePhoneNumber(e) {\r\n    this.setState({\r\n      phoneNumber: e.target.value,\r\n    });\r\n  }\r\n\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      successful: false,\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    const { dispatch, history } = this.props;\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      this.props\r\n        .dispatch(\r\n          businessRegister(this.state.username, \r\n            this.state.email, \r\n            this.state.password,\r\n            this.state.businessName,\r\n            this.state.businessWebsite,\r\n            this.state.phoneNumber)\r\n        )\r\n        .then(() => {\r\n          this.setState({\r\n            successful: true,\r\n          });\r\n          history.push(\"/\");\r\n          window.location.reload();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            successful: false,\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { message } = this.props;\r\n\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          {/* <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          /> */}\r\n\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={(c) => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Username</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChangeUsername}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    validations={[required, vpassword]}\r\n                  />\r\n                </div>\r\n\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"businessName\">Company </label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"businessName\"\r\n                    value={this.state.birthday}\r\n                    onChange={this.onChangeBusinessName}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"businessWebsite\">businessWebSite </label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"businessWebsite\"\r\n                    value={this.state.businessWebSite}\r\n                    onChange={this.onChangeBusinessWebsite}\r\n                  />\r\n                </div>\r\n\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"phoneNumber\">Contact </label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"phoneNumber\"\r\n                    value={this.state.phoneNumber}\r\n                    onChange={this.onChangePhoneNumber}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {message && (\r\n              <div className=\"form-group\">\r\n                <div className={ this.state.successful ? \"alert alert-success\" : \"alert alert-danger\" } role=\"alert\">\r\n                  {message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={(c) => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn } = state.auth;\r\n  const { message } = state.message;\r\n  return {\r\n    isLoggedIn,\r\n    message\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(BusinessRegister);","C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\actions\\stream.js",[],"C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\components\\App.js",["170","171"],"C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\components\\streams\\StreamStart.js",["172","173","174","175","176"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchStreamsByBusinessId, fetchStreams} from \"../../actions/stream\"\r\nimport history from '../../history';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nclass StreamStart extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          currentStream: null,\r\n          currentUser: undefined,\r\n          token: this.props.location.state.token\r\n        };\r\n    \r\n      }\r\n\r\n    componentDidMount(){\r\n        this.props.fetchStreamsByBusinessId(this.props.match.params.businessId)\r\n        \r\n    }\r\n\r\n    handleCurrentStream() {\r\n         return this.props.streams.map(stream => {\r\n            if(stream.token == this.state.token){\r\n               return(<Link to={`/streams/${stream.id}`} className=\"header\">\r\n                    start live\r\n               </Link>)\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n          <div>\r\n              <h5>server</h5>\r\n              <p>rtmp://localhost/live</p>\r\n              <h5>your token is</h5>\r\n              <p>{this.props.location.state.token}</p>\r\n              {this.handleCurrentStream()}\r\n          </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps= (state) => {\r\n    return {\r\n        streams: Object.values(state.streams),\r\n        user: state.myAuth.user,\r\n        isLoggedIn: state.myAuth.isLoggedIn\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{fetchStreamsByBusinessId})(StreamStart);",["177","178"],"C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\index.js",["179"],"C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\components\\streams\\StreamSearch.js",["180","181","182"],"C:\\Users\\shirl\\OneDrive\\Documents\\GitHub\\Live_combine\\client\\src\\components\\streams\\StreamTag.js",["183","184","185"],{"ruleId":"186","severity":1,"message":"187","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":26},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"186","severity":1,"message":"187","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":26},{"ruleId":"186","severity":1,"message":"187","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":26},{"ruleId":"186","severity":1,"message":"187","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":26},{"ruleId":"194","severity":1,"message":"195","line":6,"column":1,"nodeType":"196","endLine":16,"endColumn":2},{"ruleId":"186","severity":1,"message":"187","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":26},{"ruleId":"186","severity":1,"message":"187","line":2,"column":17,"nodeType":"188","messageId":"189","endLine":2,"endColumn":26},{"ruleId":"186","severity":1,"message":"197","line":3,"column":17,"nodeType":"188","messageId":"189","endLine":3,"endColumn":27},{"ruleId":"190","replacedBy":"198"},{"ruleId":"192","replacedBy":"199"},{"ruleId":"190","replacedBy":"200"},{"ruleId":"192","replacedBy":"201"},{"ruleId":"190","replacedBy":"202"},{"ruleId":"192","replacedBy":"203"},{"ruleId":"186","severity":1,"message":"204","line":7,"column":10,"nodeType":"188","messageId":"189","endLine":7,"endColumn":21},{"ruleId":"186","severity":1,"message":"205","line":8,"column":8,"nodeType":"188","messageId":"189","endLine":8,"endColumn":14},{"ruleId":"186","severity":1,"message":"206","line":78,"column":13,"nodeType":"188","messageId":"189","endLine":78,"endColumn":21},{"ruleId":"190","replacedBy":"207"},{"ruleId":"192","replacedBy":"208"},{"ruleId":"190","replacedBy":"209"},{"ruleId":"192","replacedBy":"210"},{"ruleId":"186","severity":1,"message":"187","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":26},{"ruleId":"186","severity":1,"message":"211","line":3,"column":8,"nodeType":"188","messageId":"189","endLine":3,"endColumn":18},{"ruleId":"212","severity":1,"message":"213","line":24,"column":11,"nodeType":"214","endLine":24,"endColumn":40},{"ruleId":"212","severity":1,"message":"213","line":27,"column":11,"nodeType":"214","endLine":27,"endColumn":40},{"ruleId":"212","severity":1,"message":"213","line":30,"column":11,"nodeType":"214","endLine":30,"endColumn":40},{"ruleId":"186","severity":1,"message":"187","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":26},{"ruleId":"186","severity":1,"message":"215","line":5,"column":9,"nodeType":"188","messageId":"189","endLine":5,"endColumn":21},{"ruleId":"186","severity":1,"message":"206","line":118,"column":13,"nodeType":"188","messageId":"189","endLine":118,"endColumn":21},{"ruleId":"190","replacedBy":"216"},{"ruleId":"192","replacedBy":"217"},{"ruleId":"186","severity":1,"message":"206","line":121,"column":13,"nodeType":"188","messageId":"189","endLine":121,"endColumn":21},{"ruleId":"186","severity":1,"message":"187","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":26},{"ruleId":"186","severity":1,"message":"218","line":2,"column":24,"nodeType":"188","messageId":"189","endLine":2,"endColumn":28},{"ruleId":"186","severity":1,"message":"187","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":26},{"ruleId":"186","severity":1,"message":"219","line":3,"column":36,"nodeType":"188","messageId":"189","endLine":3,"endColumn":48},{"ruleId":"186","severity":1,"message":"220","line":4,"column":8,"nodeType":"188","messageId":"189","endLine":4,"endColumn":15},{"ruleId":"221","severity":1,"message":"222","line":27,"column":47,"nodeType":"223","messageId":"224","endLine":27,"endColumn":49},{"ruleId":"225","severity":1,"message":"226","line":28,"column":29,"nodeType":"227","messageId":"228","endLine":28,"endColumn":31},{"ruleId":"190","replacedBy":"229"},{"ruleId":"192","replacedBy":"230"},{"ruleId":"186","severity":1,"message":"187","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":26},{"ruleId":"186","severity":1,"message":"187","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":26},{"ruleId":"186","severity":1,"message":"215","line":5,"column":9,"nodeType":"188","messageId":"189","endLine":5,"endColumn":21},{"ruleId":"186","severity":1,"message":"220","line":6,"column":8,"nodeType":"188","messageId":"189","endLine":6,"endColumn":15},{"ruleId":"186","severity":1,"message":"187","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":26},{"ruleId":"186","severity":1,"message":"215","line":5,"column":9,"nodeType":"188","messageId":"189","endLine":5,"endColumn":21},{"ruleId":"186","severity":1,"message":"220","line":6,"column":8,"nodeType":"188","messageId":"189","endLine":6,"endColumn":15},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","no-native-reassign",["231"],"no-negated-in-lhs",["232"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'formValues' is defined but never used.",["231"],["232"],["231"],["232"],["231"],["232"],"'fetchStream' is defined but never used.","'bcrypt' is defined but never used.","'dispatch' is assigned a value but never used.",["231"],["232"],["231"],["232"],"'GoogleAuth' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'clearMessage' is defined but never used.",["231"],["232"],"'Link' is defined but never used.","'fetchStreams' is defined but never used.","'history' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["231"],["232"],"no-global-assign","no-unsafe-negation"]